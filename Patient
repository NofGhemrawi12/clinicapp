#I want to inherit features from person class 
from genericpath import exists
from Connection import get_conn
from Person import Person


#I want to inherit features from Doctor class 
from Doctor import Doctor

class Patient (Person, Doctor):
    def __init__(self, first, last, phone, email, DoB, address, gender, history, treatment, urgency):
        Person().__init__(self,first, last, phone, email, DoB, address)
        Doctor().__init__(self, shift, availability)
        
        self.gender      = gender
        self.history     = history
        self.treatment   = treatment
        self.urgency     = urgency
        
    def name(self):
        return f"my name is {self.name}"
    
    def age(self):
        return f"Iam {self.age} years old"
    
    def gender(self):
        return f"I am {self.gender}"
    
    def history(self):
        return f"I had diagnosed with {self.history}"
    
    def phone(self):
        return f"my phone nb is {self.phone}"
    
    def email(self):
        return f" my email is {self.email}"
    def urgency(self):
        return f"my urgency case is {self.urgency}"

    def add_pat-doc(self, doctor):
    if not isinstance(doctor, Doctor):
        raise Error (" invalid doctor") 

    
    #inherit  user class from employee table (abstract method)
    Entity
    Inheritance = (strategy= Inheritancetype.TABLE_PER_CLASS)
    public_class  abstract AbsT {
         Id Long id;
   }
    Entity
    table (name= "Employee")
    public class Employee extends AbsT {
         
   }
    Entity
    table (name= "Doctor")
    public class Doctor extends AbsT {
         
   }
    
    
    
            
        
        
       
    def get_patient(self):
          get_conn()
          if name.get()= "" AND phone.get()= "" AND email.get() == UNIQUE:
              print("get your patient")
          else:
              cursor.executescript("INSERT INTO patient (name, phone, email) values (?, ?, ?)", str(name.get()), phone.get(), email.get())
              if cursor.fetchall() = None:
                  print("patient with unique values")
              else:
                  print("kindly use unique values")
              
              
         
    def insert_data(sqliteConnection):
    get_conn() 
           ##patient table
    #name
         my_patient_list = ["kamal", "nof", "nourhane", "rahaf"]
         for name in my_name_list:
          cursor.executescript( f"INSERT INTO Patient(name) value ('{my_patient_list}')")
 #role
          my_history_list= ["diabetes", "anemia", "depression", "thalassemia"]
          for hist in my_history_list:
           cursor.executescript(f"INSERT INTO Patient (history) value('{my_history_list}')")
           cursor.commit()
 #fetch
          cursor.execute(SELECT (history) from Doctor)
          print(cursor.fetchmany(2))
       
#phone
         pat_phone_nb= [1468686, 6529797,749797,7979]
         for nb in pat_phone_nb:
          cursor.executescript(f"INSERT INTO Patient (phone) value({pat_phone_nb})")
         cursor.commit()
#email
         pat_email= ["guqguq@v", "dyfy@bbk","gugufu@jvj", "fufuf@gxg"]
        for email in pat_email:
          cursor.executescript(f"INSERT INTO Patient (email) value({pat_email})")
        cursor.commit()
#urgency
        urgency= ["low", "medium", "high"]
        for urg in urgency:
         cursor.executescript(f"INSERT INTO Patient (urgency) value('{urgency}')")
    
         cursor.commit()

                                 ###department table 
        title= ["neurology", "cardiology","infection control"]  
        for tit in title:
         cursor.executescript(f"INSERT INTO Department (title) value('{title}')")
         cursor.commit() 
         print(cursor.fetchall())  
  
                                         ##appoitment table
#date
         date= ["M", "t","w", "Th", "F", "sat", "s"]
         time= [8,9,10,11,12,13,14,15]
         for d in date:
           for t in time:
            cursor.executescript(f"INSERT INTO Appointment (date, time) value('{date}'{time})")
           cursor.commit()
       
        

        
